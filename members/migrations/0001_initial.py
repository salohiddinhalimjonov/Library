# Generated by Django 3.2.2 on 2022-01-17 06:14

import django.core.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.CharField(max_length=128, unique=True, verbose_name='Email:')),
                ('first_name', models.CharField(max_length=128, verbose_name='Ism:')),
                ('last_name', models.CharField(max_length=128, verbose_name='Familiya:')),
                ('passport_id', models.CharField(max_length=20, verbose_name='Passport raqam:')),
                ('phone_number', models.CharField(max_length=12, validators=[django.core.validators.RegexValidator(message='Given phone number is not valid', regex='^(\\+?998)?([. \\-])?((\\d){2})([. \\-])?(\\d){3}([. \\-])?(\\d){2}([. \\-])?(\\d){2}$')], verbose_name='Telefon raqam:')),
                ('address', models.CharField(max_length=128, verbose_name='Manzil:')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name="Ro'yhatdan o'tgan sanasi:")),
                ('is_superuser', models.BooleanField(default=False, help_text='Administratorlik huquqi', verbose_name='Administratormi?')),
                ('is_staff', models.BooleanField(default=False, help_text='Admin qismiga kirish huquqi', verbose_name='Moderatormi')),
                ('is_active', models.BooleanField(default=True, help_text='Saytga kirish huquqi', verbose_name='Aktivmi?')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': "Kutubxona a'zosi",
                'verbose_name_plural': "Kutubxona a'zolari",
            },
        ),
    ]
